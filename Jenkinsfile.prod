pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Start container') {
      steps {
        echo 'Starting container from Docker Hub...'
        bat 'docker-compose -f docker-compose.prod.yml pull' // Baixa a imagem do Docker Hub
        bat 'docker-compose -f docker-compose.prod.yml up -d --no-color'
        script {
          // Espera até que o serviço esteja respondendo
          def retries = 30
          def success = false
          while (retries > 0 && !success) {
            try {
              bat(script: 'curl http://localhost:8585', returnStatus: true)  // Tenta acessar o serviço
              success = true
            } catch (Exception e) {
              echo "Service not responding, retrying... ($retries retries left)"
              sleep(time: 10, unit: 'SECONDS')  // Aguarda 10 segundos antes de tentar novamente
              retries--
            }
          }
          if (!success) {
            error "Service failed to start after several retries"
          }
        }
        bat 'docker-compose -f docker-compose.prod.yml logs --tail=100' // Verifica os logs do serviço
        bat 'docker-compose -f docker-compose.prod.yml ps' // Verifica o status do container
      }
    }

    stage('Run tests against the container') {
      steps {
        bat 'curl http://localhost:8585/actuator/health || echo "Service not responding"'
      }
    }
  }

  post {
    always {
      echo 'Pipeline completed'
    }
  }
}
